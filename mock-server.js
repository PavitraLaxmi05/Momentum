// Simple mock server for testing frontend
const express = require('express');
const cors = require('cors');
const app = express();

// Enable CORS for all routes
app.use(cors());
app.use(express.json());

// Mock data
const ideas = [];
const users = [
  {
    _id: '1',
    name: 'Test User',
    email: 'test@example.com',
    role: 'user'
  }
];

// Mock API routes
// Auth routes
app.post('/api/auth/login', (req, res) => {
  res.status(200).json({
    success: true,
    token: 'mock_token_123456',
    user: users[0]
  });
});

app.post('/api/auth/register', (req, res) => {
  res.status(201).json({
    success: true,
    token: 'mock_token_123456',
    user: users[0]
  });
});

app.get('/api/auth/me', (req, res) => {
  res.status(200).json({
    success: true,
    data: users[0]
  });
});

app.put('/api/auth/updateprofile', (req, res) => {
  res.status(200).json({
    success: true,
    data: { ...users[0], ...req.body }
  });
});

app.post('/api/auth/logout', (req, res) => {
  res.status(200).json({
    success: true,
    message: 'Logged out successfully'
  });
});

// Ideas routes
app.post('/api/ideas', (req, res) => {
  const idea = {
    _id: Date.now().toString(),
    ...req.body,
    createdAt: new Date(),
    updatedAt: new Date()
  };
  
  ideas.push(idea);
  
  res.status(201).json({
    success: true,
    data: idea
  });
});

app.post('/api/ideas/:id/evaluate', (req, res) => {
  const id = req.params.id;
  const idea = ideas.find(idea => idea._id === id);
  
  if (!idea) {
    return res.status(404).json({
      success: false,
      error: 'Idea not found'
    });
  }
  
  // Generate mock evaluation
  const evaluation = {
    potentialImpact: Math.floor(Math.random() * 100),
    feasibilityScore: Math.floor(Math.random() * 100),
    innovationScore: Math.floor(Math.random() * 100),
    feedback: 'This is a mock evaluation of your idea. In a real environment, this would be generated by an AI model.'
  };
  
  res.status(200).json({
    success: true,
    data: evaluation
  });
});

// Start server
const PORT = 3001;
app.listen(PORT, () => {
  console.log(`Mock server running on port ${PORT}`);
});